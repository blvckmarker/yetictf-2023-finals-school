name: packer

on:
  workflow_dispatch:
  push:
    branches: ["main", "cicd"]
    paths:
      - '.vulnbox/**'
      - '.github/workflows/packer.yml'
  workflow_call:
  pull_request:
    branches: ["main"]
    paths:
      - '.vulnbox/**'
      - '.github/workflows/packer.yml'
  schedule:
    - cron: '0 */4 * * *'

env:
  PKR_VAR_event: YetiCTF2023 # TODO: Fix hardcode

jobs:
  build:
    runs-on: [self-hosted, linux, X64, vbox, vagrant]
    env:
      PKR_VAR_username: yeti
      PKR_VAR_password: YetiCTF2023 # TODO: Fix hardcode password pls
    name: Build VM
    steps:
      - name: Check build environment
        run: |
          rm -rf .vulnbox/output-vulnbox
          rm -rf .vulnbox/.vagrant
          rm -rf .vulnbox/packer_cache
          vagrant -h > /dev/null
          packer -h > /dev/null
          vboxmanage > /dev/null

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('.vulnbox/Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      - name: Check vagrant environment
        run: |
          vagrant version
          vagrant global-status

      - run: vagrant validate
        working-directory: ./.vulnbox/

      - run: vagrant up --no-provision
        working-directory: ./.vulnbox/
          
      - run: vagrant provision
        working-directory: ./.vulnbox/

      - run: vagrant halt
        working-directory: ./.vulnbox/

      - run: vagrant status
        working-directory: ./.vulnbox/
        
      - name: Get VM details
        id: vm-details
        run: |
          UUID=$(cat .vagrant/machines/default/virtualbox/id)
          echo "vm_name=$( vboxmanage showvminfo $UUID --machinereadable | grep -o -E 'vulnbox_default_[0-9]{1,}_[0-9]{1,}' | uniq)" >> $GITHUB_OUTPUT
          echo "ssh_port=$(vboxmanage showvminfo $UUID --machinereadable | grep Forwarding  | awk -F',' '{print $4}')" >> $GITHUB_OUTPUT
        working-directory: ./.vulnbox/

      - name: Check virtualbox machine settings
        run: vboxmanage showvminfo ${{ steps.vm-details.outputs.vm_name }}

      - name: packer init & validate
        run: |
          packer init .
          packer validate .
        env:
          PACKER_GITHUB_API_TOKEN: ${{ secrets.PACKER_GITHUB_API_TOKEN }}
          PKR_VAR_vagrantbox: ${{ steps.vm-details.outputs.vm_name }}
          PKR_VAR_port: ${{ steps.vm-details.outputs.ssh_port }}
        working-directory: ./.vulnbox/

      - run: packer build .
        env:
          PKR_VAR_vagrantbox: ${{ steps.vm-details.outputs.vm_name }}
          PKR_VAR_port: ${{ steps.vm-details.outputs.ssh_port }}
        working-directory: ./.vulnbox/

      - run: vagrant halt -f && vagrant destroy -f
        if: ${{ always() }}
        working-directory: ./.vulnbox/

      - run: rm -rf .vagrant
        if: ${{ always() }}
        working-directory: ./.vulnbox/
  
  push:
    needs: build
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'  }}
    name: Push VM to s3
    runs-on: [self-hosted, linux, X64, vbox, vagrant]
    env:
      ZIP_PASSWORD: YetiNETI2023  # TODO: Fix hardcode password pls
    steps:
      - name: Check aws cli
        run: aws s3 help >/dev/null 

      - name: Get current date
        id: today
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: ZIP w\ password
        run: zip -e -P $ZIP_PASSWORD ${PKR_VAR_event}_${{ steps.today.outputs.today }}.ova.zip ${PKR_VAR_event}.ova
        working-directory: ./.vulnbox/output-vulnbox/

      - name: Put to Yandex Object storage
        run: aws s3 --endpoint-url=https://storage.yandexcloud.net cp --quiet ${PKR_VAR_event}_${{ steps.today.outputs.today }}.ova.zip s3://vulnbox/${PKR_VAR_event}_${{ steps.today.outputs.today }}.ova.zip
        working-directory: ./.vulnbox/output-vulnbox/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ru-central1"

      - run: rm -rf output-vulnbox
        working-directory: ./.vulnbox/
